// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as Caml_int32 from "rescript/lib/es6/caml_int32.js";
import * as Pervasives from "rescript/lib/es6/pervasives.js";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";

function charCode(c) {
  return c.charCodeAt(0) | 0;
}

function num(letter) {
  var code = letter.charCodeAt(0) | 0;
  if (code <= 1077) {
    return (code - 1072 | 0) + 1 | 0;
  } else if (code === 1105) {
    return 7;
  } else {
    return (code - 1072 | 0) + 2 | 0;
  }
}

function main(str) {
  var str$1 = str.toLowerCase();
  var loop = function (_i, _op, _l, _r) {
    while(true) {
      var r = _r;
      var l = _l;
      var op = _op;
      var i = _i;
      if (str$1.length === i) {
        return Belt_Option.map(op, (function(l,r){
                  return function (op) {
                    return Curry._2(op, l, r);
                  }
                  }(l,r)));
      }
      var c = str$1[i];
      var op$p;
      switch (c) {
        case "*" :
            op$p = (function (a, b) {
                return Math.imul(a, b);
              });
            break;
        case "+" :
            op$p = (function (a, b) {
                return a + b | 0;
              });
            break;
        case "-" :
            op$p = (function (a, b) {
                return a - b | 0;
              });
            break;
        case "/" :
            op$p = Caml_int32.div;
            break;
        default:
          op$p = undefined;
      }
      if (op !== undefined) {
        if (op$p !== undefined) {
          return Pervasives.failwith("");
        }
        _r = r + num(c) | 0;
        _i = i + 1 | 0;
        continue ;
      }
      if (op$p !== undefined) {
        _op = op$p;
        _i = i + 1 | 0;
        continue ;
      }
      _l = l + num(c) | 0;
      _op = op$p;
      _i = i + 1 | 0;
      continue ;
    };
  };
  return Belt_Option.getExn(loop(0, undefined, 0, 0));
}

var a = 1072;

var yo = 1105;

var ye = 1077;

var ya = 1103;

export {
  charCode ,
  a ,
  yo ,
  ye ,
  ya ,
  num ,
  main ,
  
}
/* No side effect */
