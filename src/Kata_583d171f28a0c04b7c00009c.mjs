// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Belt_List from "rescript/lib/es6/belt_List.js";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as Pervasives from "rescript/lib/es6/pervasives.js";

function fastSum(sums, param) {
  var la = Belt_Array.get(sums, param[0] - 1 | 0);
  var ra = Belt_Array.get(sums, param[1]);
  if (la !== undefined) {
    if (ra !== undefined) {
      return ra - la | 0;
    } else {
      return Pervasives.failwith("");
    }
  } else if (ra !== undefined) {
    return ra;
  } else {
    return Pervasives.failwith("");
  }
}

function maxSum(arr, range) {
  var sumsRec = function (_acc, _ind) {
    while(true) {
      var ind = _ind;
      var acc = _acc;
      if (arr.length === ind) {
        return acc;
      }
      if (acc) {
        _ind = ind + 1 | 0;
        _acc = {
          hd: acc.hd + Belt_Array.getExn(arr, ind) | 0,
          tl: acc.tl
        };
        continue ;
      }
      _ind = ind + 1 | 0;
      _acc = {
        hd: Belt_Array.getExn(arr, ind),
        tl: /* [] */0
      };
      continue ;
    };
  };
  Belt_List.toArray(Belt_List.reverse(sumsRec(/* [] */0, 0)));
  return function (param) {
    return Belt_Array.reduce(range, (function (a, b) {
                  return a;
                }), param);
  };
}

export {
  fastSum ,
  maxSum ,
  
}
/* No side effect */
