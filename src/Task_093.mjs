// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as Caml_obj from "rescript/lib/es6/caml_obj.js";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";

function minMaxIndex(numbers, comp) {
  return Belt_Array.reduceWithIndex(numbers, [
              Belt_Array.getExn(numbers, 0),
              0
            ], (function (param, c, i) {
                var mc = param[0];
                if (Curry._2(comp, c, mc)) {
                  return [
                          c,
                          i
                        ];
                } else {
                  return [
                          mc,
                          param[1]
                        ];
                }
              }));
}

function minIndex(numbers) {
  return minMaxIndex(numbers, Caml_obj.caml_lessthan);
}

function maxIndex(numbers) {
  return minMaxIndex(numbers, Caml_obj.caml_greaterequal);
}

function main(numbers) {
  if (numbers.length < 3) {
    return 0;
  }
  var match = minIndex(numbers);
  var minIndex$1 = match[1];
  var match$1 = maxIndex(numbers);
  var maxIndex$1 = match$1[1];
  var minIndex$p = minIndex$1 < maxIndex$1 ? minIndex$1 : maxIndex$1;
  var maxIndex$p = minIndex$1 > maxIndex$1 ? minIndex$1 : maxIndex$1;
  return Belt_Array.reduceWithIndex(numbers, 0, (function (acc, el, ind) {
                if (minIndex$p < ind && ind < maxIndex$p) {
                  return acc + el | 0;
                } else {
                  return acc;
                }
              }));
}

export {
  minMaxIndex ,
  minIndex ,
  maxIndex ,
  main ,
  
}
/* No side effect */
